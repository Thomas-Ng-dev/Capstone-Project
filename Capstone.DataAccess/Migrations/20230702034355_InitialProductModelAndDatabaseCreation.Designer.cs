// <auto-generated />
using Capstone.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Capstone.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230702034355_InitialProductModelAndDatabaseCreation")]
    partial class InitialProductModelAndDatabaseCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.5.23280.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Capstone.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Street",
                            City = "SomeCity",
                            Country = "United States",
                            Email = "mymail@mail.com",
                            Name = "Company 1",
                            Phone = "111-222-3333",
                            PostalCode = "12345",
                            Region = "Washington Stats"
                        },
                        new
                        {
                            Id = 2,
                            Address = "1234 Street",
                            City = "Argon",
                            Country = "United States",
                            Email = "guy@mail.com",
                            Name = "Company 2",
                            Phone = "111-225-3243",
                            PostalCode = "45678",
                            Region = "New York"
                        },
                        new
                        {
                            Id = 3,
                            Address = "12345 Street",
                            City = "Borat",
                            Country = "Canada",
                            Email = "dude@mail.com",
                            Name = "Company 3",
                            Phone = "999-222-3333",
                            PostalCode = "J4W2R3",
                            Region = "Quebec"
                        });
                });

            modelBuilder.Entity("Capstone.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("GrossWeight")
                        .HasColumnType("float");

                    b.Property<int>("Inventory")
                        .HasColumnType("int");

                    b.Property<bool>("IsHazardous")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("NetWeight")
                        .HasColumnType("float");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GrossWeight = 110.0,
                            Inventory = 10,
                            IsHazardous = true,
                            Name = "Prod1",
                            NetWeight = 100.0,
                            ProductCode = "HMG1"
                        },
                        new
                        {
                            Id = 2,
                            GrossWeight = 13.0,
                            Inventory = 11,
                            IsHazardous = false,
                            Name = "Prod2",
                            NetWeight = 10.0,
                            ProductCode = "xx111"
                        },
                        new
                        {
                            Id = 3,
                            GrossWeight = 1224.0,
                            Inventory = 1,
                            IsHazardous = true,
                            Name = "Prod3",
                            NetWeight = 1090.0,
                            ProductCode = "saf13"
                        },
                        new
                        {
                            Id = 4,
                            GrossWeight = 15.0,
                            Inventory = 54,
                            IsHazardous = true,
                            Name = "Prod4",
                            NetWeight = 12.0,
                            ProductCode = "fdsfds11"
                        },
                        new
                        {
                            Id = 5,
                            GrossWeight = 22.0,
                            Inventory = 101,
                            IsHazardous = false,
                            Name = "Prod5",
                            NetWeight = 15.0,
                            ProductCode = "fsdgfds123"
                        },
                        new
                        {
                            Id = 6,
                            GrossWeight = 60.0,
                            Inventory = 45,
                            IsHazardous = false,
                            Name = "Prod6",
                            NetWeight = 55.0,
                            ProductCode = "fdsgds1235"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
